{
  message: 'data and salt arguments required',
  level: 'error',
  timestamp: '15-11-2024 23:27:59'
}
{
  message: 'data and salt arguments required',
  level: 'error',
  timestamp: '15-11-2024 23:28:16'
}
{
  message: 'Password is required',
  level: 'error',
  timestamp: '15-11-2024 23:30:58'
}
{
  message: 'Password is required',
  level: 'error',
  timestamp: '15-11-2024 23:31:11'
}
{
  message: 'Password is required',
  level: 'error',
  timestamp: '15-11-2024 23:33:22'
}
{
  message: 'Password is required',
  level: 'error',
  timestamp: '15-11-2024 23:34:05'
}
{
  message: 'Password is required',
  level: 'error',
  timestamp: '15-11-2024 23:35:11'
}
{
  message: 'Password is required',
  level: 'error',
  timestamp: '15-11-2024 23:38:17'
}
{
  message: 'Password is required',
  level: 'error',
  timestamp: '15-11-2024 23:39:36'
}
{
  message: 'data and salt arguments required',
  level: 'error',
  timestamp: '15-11-2024 23:45:45'
}
{
  message: 'data and salt arguments required',
  level: 'error',
  timestamp: '15-11-2024 23:47:26'
}
{
  message: '\n' +
    'Invalid `prisma.user.create()` invocation in\n' +
    'C:\\Users\\USER\\Documents\\NGODING\\HOWLIL\\stunby-capstone-bangkit\\src\\services\\user.service.js:9:34\n' +
    '\n' +
    '  6 console.log(data)\n' +
    '  7 const hashedPassword = await encryptPassword(data.password);\n' +
    '  8 \n' +
    '→ 9 const user = await prisma.user.create({\n' +
    '      data: {\n' +
    '        email: "Johnson_Greenfelder@hotmail.com",\n' +
    '        full_name: "Larry Larson",\n' +
    '        gender: "female",\n' +
    '        birth_day: new Date("2025-11-01T00:00:00.000Z"),\n' +
    '                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n' +
    '        password: "$2b$10$SiuCCBo0hbtPoxNojQy4suzibyvgfW7KFvFPEh16u3R3qWTcXTPDG",\n' +
    '        foto_url: "https://well-worn-stitcher.com/"\n' +
    '      }\n' +
    '    })\n' +
    '\n' +
    'Argument `birth_day`: Invalid value provided. Expected String or Null, provided DateTime.',
  level: 'error',
  timestamp: '15-11-2024 23:48:33'
}
{
  message: '\n' +
    'Invalid `prisma.user.create()` invocation in\n' +
    'C:\\Users\\USER\\Documents\\NGODING\\HOWLIL\\stunby-capstone-bangkit\\src\\services\\user.service.js:9:34\n' +
    '\n' +
    '  6 console.log(data)\n' +
    '  7 const hashedPassword = await encryptPassword(data.password);\n' +
    '  8 \n' +
    '→ 9 const user = await prisma.user.create({\n' +
    '      data: {\n' +
    '        email: "Johnson_Greenfelder@hotmail.com",\n' +
    '        full_name: "Larry Larson",\n' +
    '        gender: "female",\n' +
    '        birth_day: new Date("2025-11-01T00:00:00.000Z"),\n' +
    '                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n' +
    '        password: "$2b$10$QG5dCprGJQ5UTdnSE7dxhepRwZEaqSfPqaOuZA3YqmcNAKbl71PiS",\n' +
    '        foto_url: "https://well-worn-stitcher.com/"\n' +
    '      }\n' +
    '    })\n' +
    '\n' +
    'Argument `birth_day`: Invalid value provided. Expected String or Null, provided DateTime.',
  level: 'error',
  timestamp: '15-11-2024 23:52:51'
}
{
  message: '\n' +
    'Invalid `prisma.user.create()` invocation in\n' +
    'C:\\Users\\USER\\Documents\\NGODING\\HOWLIL\\stunby-capstone-bangkit\\src\\services\\user.service.js:9:34\n' +
    '\n' +
    '  6 console.log(data)\n' +
    '  7 const hashedPassword = await encryptPassword(data.password);\n' +
    '  8 \n' +
    '→ 9 const user = await prisma.user.create({\n' +
    '      data: {\n' +
    '        email: "Johnson_Greenfelder@hotmail.com",\n' +
    '        full_name: "Larry Larson",\n' +
    '        gender: "female",\n' +
    '        birth_day: new Date("2025-11-01T00:00:00.000Z"),\n' +
    '                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n' +
    '        password: "$2b$10$15oMW3tGbwkaI8fGQUx6VuoyzRbd70X.42TyZQolEHvmyptE61QqC",\n' +
    '        foto_url: "https://well-worn-stitcher.com/"\n' +
    '      }\n' +
    '    })\n' +
    '\n' +
    'Argument `birth_day`: Invalid value provided. Expected String or Null, provided DateTime.',
  level: 'error',
  timestamp: '15-11-2024 23:55:27'
}
{
  message: '\n' +
    'Invalid `prisma.user.findUnique()` invocation in\n' +
    'C:\\Users\\USER\\Documents\\NGODING\\HOWLIL\\stunby-capstone-bangkit\\src\\services\\user.service.js:25:34\n' +
    '\n' +
    '  22 };\n' +
    '  23 \n' +
    '  24 const loginUser = async (data) => {\n' +
    '→ 25   const user = await prisma.user.findUnique({\n' +
    '         where: {\n' +
    '           email: "Kyler.Lynch@hotmail.com",\n' +
    '       ?   id?: String,\n' +
    '       ?   AND?: UserWhereInput | UserWhereInput[],\n' +
    '       ?   OR?: UserWhereInput[],\n' +
    '       ?   NOT?: UserWhereInput | UserWhereInput[],\n' +
    '       ?   full_name?: StringNullableFilter | String | Null,\n' +
    '       ?   gender?: StringNullableFilter | String | Null,\n' +
    '       ?   birth_day?: StringNullableFilter | String | Null,\n' +
    '       ?   password?: StringFilter | String,\n' +
    '       ?   foto_url?: StringNullableFilter | String | Null,\n' +
    '       ?   created_at?: DateTimeFilter | DateTime,\n' +
    '       ?   updated_at?: DateTimeFilter | DateTime,\n' +
    '       ?   token?: TokenListRelationFilter\n' +
    '         }\n' +
    '       })\n' +
    '\n' +
    'Argument `where` of type UserWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.',
  level: 'error',
  timestamp: '16-11-2024 02:09:01'
}
{
  message: '\n' +
    'Invalid `prisma.user.findUnique()` invocation in\n' +
    'C:\\Users\\USER\\Documents\\NGODING\\HOWLIL\\stunby-capstone-bangkit\\src\\services\\user.service.js:26:34\n' +
    '\n' +
    '  23 \n' +
    '  24 const loginUser = async (data) => {\n' +
    '  25   \n' +
    '→ 26   const user = await prisma.user.findUnique({\n' +
    '         where: {\n' +
    '           email: "Kyler.Lynch@hotmail.com",\n' +
    '       ?   id?: String,\n' +
    '       ?   AND?: UserWhereInput | UserWhereInput[],\n' +
    '       ?   OR?: UserWhereInput[],\n' +
    '       ?   NOT?: UserWhereInput | UserWhereInput[],\n' +
    '       ?   full_name?: StringNullableFilter | String | Null,\n' +
    '       ?   gender?: StringNullableFilter | String | Null,\n' +
    '       ?   birth_day?: StringNullableFilter | String | Null,\n' +
    '       ?   password?: StringFilter | String,\n' +
    '       ?   foto_url?: StringNullableFilter | String | Null,\n' +
    '       ?   created_at?: DateTimeFilter | DateTime,\n' +
    '       ?   updated_at?: DateTimeFilter | DateTime,\n' +
    '       ?   token?: TokenListRelationFilter\n' +
    '         }\n' +
    '       })\n' +
    '\n' +
    'Argument `where` of type UserWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.',
  level: 'error',
  timestamp: '16-11-2024 02:11:55'
}
{
  message: 'Invalid email or password',
  errors: undefined,
  level: 'error',
  timestamp: '16-11-2024 02:12:31'
}
{
  message: '\n' +
    'Invalid `prisma.user.create()` invocation in\n' +
    'C:\\Users\\USER\\Documents\\NGODING\\HOWLIL\\stunby-capstone-bangkit\\src\\services\\user.service.js:10:34\n' +
    '\n' +
    '   7 const registerUser = async (data) => {\n' +
    '   8   const hashedPassword = await encryptPassword(data.password);\n' +
    '   9 \n' +
    '→ 10   const user = await prisma.user.create(\n' +
    'Unique constraint failed on the fields: (`email`)',
  level: 'error',
  timestamp: '16-11-2024 02:12:40'
}
{
  message: '\n' +
    'Invalid `prisma.user.create()` invocation in\n' +
    'C:\\Users\\USER\\Documents\\NGODING\\HOWLIL\\stunby-capstone-bangkit\\src\\services\\user.service.js:10:34\n' +
    '\n' +
    '   7 const registerUser = async (data) => {\n' +
    '   8   const hashedPassword = await encryptPassword(data.password);\n' +
    '   9 \n' +
    '→ 10   const user = await prisma.user.create(\n' +
    'Unique constraint failed on the fields: (`email`)',
  level: 'error',
  timestamp: '16-11-2024 02:12:57'
}
{
  message: '\n' +
    'Invalid `prisma.user.create()` invocation in\n' +
    'C:\\Users\\USER\\Documents\\NGODING\\HOWLIL\\stunby-capstone-bangkit\\src\\services\\user.service.js:18:34\n' +
    '\n' +
    '  15 }\n' +
    '  16 const hashedPassword = await encryptPassword(data.password);\n' +
    '  17 \n' +
    '→ 18 const user = await prisma.user.create(\n' +
    'Unique constraint failed on the fields: (`email`)',
  level: 'error',
  timestamp: '16-11-2024 02:14:37'
}
{
  message: 'account already',
  errors: undefined,
  level: 'error',
  timestamp: '16-11-2024 02:14:56'
}
{
  message: 'account already created',
  errors: undefined,
  level: 'error',
  timestamp: '16-11-2024 02:15:15'
}
{
  message: 'password is not defined',
  level: 'error',
  timestamp: '16-11-2024 02:15:51'
}
{
  message: 'password is not defined',
  level: 'error',
  timestamp: '16-11-2024 02:15:58'
}
{
  message: 'Expected double-quoted property name in JSON at position 161',
  level: 'error',
  timestamp: '16-11-2024 02:17:14'
}
